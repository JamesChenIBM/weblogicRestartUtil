#!/bin/bash

##################################################################################
# chkconfig: 345 91 9
# Assume wlsnodemanager is "345 90 10". 
# Make sure this script starts after wlsnodemanager and stops before it.
# Description: start/stop/restart/rollingrestart/healthcheck the Weblogic 
# Instances as user who owns the script.
#---------------------------------------------------------------------------------
# Usage: service wlsinstance start/stop/restart/rollingrestart/healthcheck
#---------------------------------------------------------------------------------
# Installation:

# Step 1 - 
# Copy wlsinstance to /etc/rc.d/init.d

# Step 2 - Enable the script 
$ chkconfig --add wlsinstance 
$ chkconfig --level 345 wlsinstance on 

# Step 3 - Check the script if enabled
$ chkconfig --list | grep myscript
 
# cd /etc/rc3.d ; ln -s /etc/init.d/wlsinstance S91wlsinstance
# cd /etc/rc3.d ; ln -s /etc/init.d/wlsinstance K9wlsinstance
##################################################################################

# Standard functions
. /etc/init.d/functions


# Init
USER=$(whoami)
WL_OWNER="applmgr"
DOMAIN_HOME="/u01/app/oracle/domains/osb01"

###############################################################################
# start
###############################################################################
start(){
  echo "Launching Weblogic Instance"
}

###############################################################################
# stop
###############################################################################
stop() {
  echo "Stopping Weblogic Instance"
}

###############################################################################
# status
###############################################################################
status() {

}

###############################################################################
# main
###############################################################################
case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  status)
    status
    ;;
  *)
   echo $"Usage: $0 {start|stop|restart|rollingrestart|healthcheck}"
   RETVAL=1
esac


# Inform the caller not only verbosely and set an exit status.
test "$ret" = "$rc_success" || exit 1
exit 0
